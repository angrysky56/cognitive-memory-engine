[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cognitive-memory-engine"
dynamic = ["version"]
description = "A unified AI memory architecture combining neuroscientific principles, temporal organization, and narrative hierarchies"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["ai", "memory", "mcp", "cognitive", "neural", "temporal"]
authors = [
  {name = "AI Workspace", email = "angrysky56@users.noreply.github.com"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  # MCP Server and Data Ingestion (Core functionality)
  "mcp[cli]>=1.2.0",
  "mcp-server-fetch>=2025.4.7",  # Core dependency for data ingestion
  # Core dependencies
  "fastapi>=0.116.1",
  "uvicorn>=0.35.0",
  "pydantic>=2.11.7",
  "python-dotenv>=1.1.1",
  # AI and ML
  "openai>=1.97.0",
  "google-genai>=1.0.0,<1.25.0", # Constrained by httpx compatibility
  "anthropic>=0.57.1", # Claude API
  "sentence-transformers>=5.0.0",
  "torch>=2.7.1",
  "transformers>=4.53.2",
  # Vector and Graph databases
  "chromadb>=1.0.15",
  "networkx>=3.5",
  # Phase 3A: Semantic Enhancement Dependencies
  "duckdb>=1.3.2",  # High-performance analytical database for graph queries
  "typer>=0.16.0",  # Elegant CLI interface (elegance toolkit)
  "rich>=14.0.0",   # Enhanced terminal UX (debugging toolkit)
  # Scientific computing (for SVG)
  "scipy>=1.11.0",
  "scikit-learn>=1.3.0",
  # Data processing
  "numpy>=2.3.1",
  "pandas>=2.3.1",
  "python-dateutil>=2.9.0.post0",
  # Semantic Reasoning (Phase 3A: Prolog + Montague Architecture)
  "pyswip>=0.3.3", # Python interface to SWI-Prolog for formal logic reasoning
  # HTTP and async
  "aiohttp>=3.12.14",
  "httpx>=0.27.0,<0.28",  # Constrained by mcp-server-fetch
  # Logging and monitoring
  "loguru>=0.7.3",
  "prometheus-client>=0.22.1",
  # Ollama integration
  "ollama>=0.5.1",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.4.1",
  "pytest-asyncio>=1.1.0",
  "black>=25.1.0",
  "ruff>=0.1.0",
  "mypy>=1.17.0",
  "isort>=6.0.1",
]

[project.urls]
Documentation = "https://github.com/angrysky56/ai_workspace/tree/main/cognitive-memory-engine#readme"
Issues = "https://github.com/angrysky56/ai_workspace/issues"
Source = "https://github.com/angrysky56/ai_workspace/tree/main/cognitive-memory-engine"

[project.scripts]
cognitive-memory-engine = "cognitive_memory_engine.mcp_server.main:main"
cme-server = "cognitive_memory_engine.mcp_server.main:main"

[tool.hatch.version]
path = "src/cognitive_memory_engine/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/cognitive_memory_engine"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
]
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
  "src/cognitive_memory_engine/tests",
]
